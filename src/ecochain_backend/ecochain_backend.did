type DataStatus = variant { Pending; Validated; Rejected };
type Role = variant { User; Validator; Admin };

type DataEntry = record {
  id: nat64;
  content: text;
  submitted_by: principal;
  status: DataStatus;
  votes_for: nat64;
  votes_against: nat64;
};

type UserProfile = record {
  role: Role;
  submissions: nat64;
  tokens: nat64;
};

type Proposal = record {
  id: nat64;
  title: text;
  description: text;
  created_by: principal;
  votes_for: nat64;
  votes_against: nat64;
};

service : {
  "submit_data": (text) -> ();
  "get_pending_data": () -> (vec DataEntry) query;
  "vote_on_data": (nat64, bool) -> ();
  "get_validated_data": () -> (vec DataEntry) query;
  "get_user_profile": () -> (opt UserProfile) query;
  "promote_user_role": (text, Role) -> ();
  "reward_contributors": () -> ();
  "create_proposal": (text, text) -> ();
  "get_proposals": () -> (vec Proposal) query;
  "get_wallet_address": () -> (text) query;
  "get_user_role": () -> (Role) query;
  "delete_data": (nat64) -> ();
}
